<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<http:listener-config name="HTTP_Listener_challenges4_1" doc:name="HTTP Listener config" doc:id="49e85bff-3619-47de-95ca-6e32a033f968" >
		<http:listener-connection host="0.0.0.0" port="8084" />
	</http:listener-config>
	<flow name="challenges4Flow" doc:id="9bb4c4b1-47d1-4377-839f-0cf706c42046" >
		<http:listener doc:name="Listener" doc:id="289e0795-25f5-4842-ab56-adf089604285" path="/employee" config-ref="HTTP_Listener_challenges4_1"/>
		<ee:transform doc:name="Transform Message" doc:id="8d39c163-38cc-4fe7-bebd-48ef4910b188" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Arrays
//var payload1 = {"employee":[{"id":"A007","first_name":"Jan","last_name":"Doe"},{"id":"A008","first_name":"Ron","last_name":"David"},{"id":"A009","first_name":"Jane","last_name":"Kane"},{"id":"A010","first_name":"Marsh","last_name":"Megan"},{"id":"A011","first_name":"Kelly","last_name":"Mitch"},{"id":"A012","first_name":"Chris","last_name":"Vaste"}]}

//var payload2 = {"scoreBoard":[{"id":"A007","subjects":["Maths","English","Arts","Drawimgs"],"score":[80,75,89,100]},{"id":"A008","subjects":["Maths","English","Arts","Drawimgs"],"score":[70,85,69,90]},{"id":"A021","subjects":["Maths","English","Arts","Drawimgs"],"score":[90,87,77,95]}]}

---


certificate:join(payload.employee, payload.scoreBoard,  (leftval) -> leftval.id, (rightval) -> rightval.id) map(value,inxed) -> 

{
		id:value.l.id,
		firstName:value.l.first_name,
		LastName:value.l.last_name,
		MarksBySubjectWise:[value.r mapObject {(value.r.subjects[$$$]):value.r.score[$$$]}]
		
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
